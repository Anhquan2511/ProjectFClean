@model ProjectFClean.Models.Post

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutDetails.cshtml";
}

<h2>Edit a Post</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <table class="table-responsive" width="1000px" style="margin-left:175px;">
        <tbody>
           
            <tr>
                <td>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.PID)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ServiceID, "Service", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("ServiceID", null, htmlAttributes: new { @class = "form-control" })
                    <div class="dropdown-menu dropdown-menu-right">
                        <!-- Menu items -->
                    </div>
                    @Html.ValidationMessageFor(model => model.ServiceID, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.Location, new SelectList(new List<string> { "Liên Chiểu", "Hải Châu", "Ngũ Hành Sơn", "Sơn Trà", "Cẩm Lệ", "Thanh Khê" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.Gender, new SelectList(new List<string> { "Male", "Female" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.DatePost, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.DatePost, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.DatePost, "", new { @class = "text-danger" })
                </td>
            </tr>
        </tbody>
    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-12" id="btn-save">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Back ", "DetailsPost", "Posts", new { pid = Model.PID }, new { @class = "btn btn-primary" })
        </div>
    </div>

}

<style>
    .table-responsive th,
    .table-responsive td {
        padding: 10px;
        text-align: justify;
        font-size: 20px;
        color: black;
    }

    .table-responsive {
        padding: 0 200px;
    }

    h2 {
        display: flex;
        justify-content: center;
        padding: 20px;
    }

    #btn-save {
        display: flex;
        justify-content: space-around;
        padding: 0 80px;
    }

    #Description {
        width: 100%;
        height: 70px;
    }

    select#Location {
        background-color: white;
    }

    select#ServiceID {
        background-color: white;
    }

    select#Gender {
        background-color: white;
    }
</style>


